<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2017 Lukáš Petrovický
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>robozonky</artifactId>
    <groupId>com.github.triceo.robozonky</groupId>
    <version>3.0.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>robozonky-api</artifactId>
  <name>RoboZonky: Public, stable APIs</name>

  <dependencies>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.ini4j</groupId>
      <artifactId>ini4j</artifactId>
      <version>0.5.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.stefanbirkner</groupId>
      <artifactId>system-rules</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.revapi</groupId>
        <artifactId>revapi-maven-plugin</artifactId>
        <version>0.8.0</version>
        <dependencies>
          <dependency>
            <groupId>org.revapi</groupId>
            <artifactId>revapi-java</artifactId>
            <version>0.13.0</version>
          </dependency>
        </dependencies>
        <configuration>
          <versionFormat>[1-9]+\.[0-9]+\.[0-9]+</versionFormat>
          <analysisConfiguration><![CDATA[
            {
              "revapi": {
                "java": {
                  "filter": {
                    "packages": {
                      "regex": true,
                      "exclude": ["com\\.github\\.triceo\\.robozonky\\.internal(\\..+)?"]
                    }
                  }
                },
                "ignore": [
                  {
                    "code": "java.method.returnTypeChanged",
                    "old": "method <T extends com.github.triceo.robozonky.api.notifications.Event> java.util.Optional<com.github.triceo.robozonky.api.notifications.EventListener<T>> com.github.triceo.robozonky.api.notifications.ListenerService::findListener(java.lang.Class<T>)",
                    "new": "method <T extends com.github.triceo.robozonky.api.notifications.Event> com.github.triceo.robozonky.api.Refreshable<com.github.triceo.robozonky.api.notifications.EventListener<T>> com.github.triceo.robozonky.api.notifications.ListenerService::findListener(java.lang.Class<T>)",
                    "justification": "Introduction of daemon mode forced us to implement refreshable configurations."
                  }, {
                    "code": "java.class.removed",
                    "old": "class com.github.triceo.robozonky.api.Defaults",
                    "package": "com.github.triceo.robozonky.api",
                    "classSimpleName": "Defaults",
                    "justification": "Class mistakenly included in the public part of the API."
                  }, {
                    "code": "java.class.removed",
                    "old": "class com.github.triceo.robozonky.api.State",
                    "package": "com.github.triceo.robozonky.api",
                    "classSimpleName": "State",
                    "justification": "Class mistakenly included in the public part of the API."
                  }, {
                    "code": "java.class.removed",
                    "old": "class com.github.triceo.robozonky.api.notifications.MarketplaceCheckCompletedEvent",
                    "package": "com.github.triceo.robozonky.api.notifications",
                    "classSimpleName": "MarketplaceCheckCompletedEvent",
                    "justification": "Some marketplace implementations don't actively check, so this became confusing."
                  }, {
                    "code": "java.class.removed",
                    "old": "class com.github.triceo.robozonky.api.notifications.MarketplaceCheckStartedEvent",
                    "package": "com.github.triceo.robozonky.api.notifications",
                    "classSimpleName": "MarketplaceCheckStartedEvent",
                    "justification": "Some marketplace implementations don't actively check, so this became confusing."
                  }, {
                    "code": "java.class.removed",
                    "old": "class com.github.triceo.robozonky.api.remote.ZotifyApi",
                    "package": "com.github.triceo.robozonky.api.remote",
                    "classSimpleName": "ZotifyApi",
                    "justification": "Zotify API has moved into the default marketplace provider."
                  }, {
                    "code": "java.method.visibilityReduced",
                    "old": "method void com.github.triceo.robozonky.api.remote.entities.Loan::<init>()",
                    "new": "method void com.github.triceo.robozonky.api.remote.entities.Loan::<init>()",
                    "oldVisibility": "public",
                    "newVisibility": "protected",
                    "package": "com.github.triceo.robozonky.api.remote.entities",
                    "classSimpleName": "Loan",
                    "methodName": "<init>",
                    "justification": "Loan now has a constructor with attributes, and this one is now solely for JAXB."
                  }, {
                    "code": "java.method.numberOfParametersChanged",
                    "old": "method void com.github.triceo.robozonky.api.remote.entities.ZonkyApiToken::<init>(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String)",
                    "new": "method void com.github.triceo.robozonky.api.remote.entities.ZonkyApiToken::<init>(java.lang.String, java.lang.String, int, java.time.OffsetDateTime, java.lang.String, java.lang.String)",
                    "package": "com.github.triceo.robozonky.api.remote.entities",
                    "classSimpleName": "ZonkyApiToken",
                    "methodName": "<init>",
                    "justification": "New constructor for testing purposes."
                  }, {
                    "code": "java.class.noLongerImplementsInterface",
                    "justification": "Events and JAXB Entities now have default toString(), and therefore extend instead of implement."
                  }, {
                    "code": "java.class.nonFinalClassInheritsFromNewClass",
                    "justification": "Events and JAXB Entities now have default toString(), and therefore extend instead of implement."
                  }, {
                    "code": "java.method.nowFinal",
                    "justification": "JAXB Entities now share single final toString()."
                  }, {
                    "code": "java.method.finalMethodAddedToNonFinalClass",
                    "justification": "Events now share single final toString()."
                  }, {
                    "code": "java.method.removed",
                    "justification": "handleGetter()/handleSetter() no longer default methods."
                  }, {
                    "code": "java.class.kindChanged",
                    "justification": "Event changed from interface to abstract class in order to add toString()."
                  }, {
                    "code": "java.method.numberOfParametersChanged",
                    "old": "method void com.github.triceo.robozonky.api.notifications.RoboZonkyEndingEvent::<init>(com.github.triceo.robozonky.api.ReturnCode)",
                    "new": "method void com.github.triceo.robozonky.api.notifications.RoboZonkyEndingEvent::<init>()",
                    "package": "com.github.triceo.robozonky.api.notifications",
                    "classSimpleName": "RoboZonkyEndingEvent",
                    "methodName": "<init>",
                    "justification": "This event is for clean termination, therefore return code makes no sense."
                  }
                ]
              }
            }
          ]]></analysisConfiguration>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
